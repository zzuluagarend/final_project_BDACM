parse_json_to_df(guardian_results)
parse_json_to_df(guardian_results$body)
guardian_results$body
guardian_results <- get_json("AI",
"science",
from.date = "2016-01-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results <- get_json("AI",
"science",
from.date = "2016-012-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results <- get_json(keywords = "AI",
"science",
from.date = "2016-012-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results <- get_json(keywords = "AI",
"science",
from.date = "2016-12-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results <- get_json(keywords = "AI",
"science",
from.date = "2016-12-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results <- get_json(keywords = "AI",
"science",
format = "json",
from.date = "2016-12-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results
parse_json_to_df(guardian_results)
guardian_df <- parse_json_to_df(guardian_results)
View(guardian_df)
guardian_results <- get_guardian(keywords = "AI",
"science",
format = "json",
from.date = "2016-01-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results <- get_guardian(keywords = "AI",
"science",
from.date = "2016-01-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results <- get_guardian("AI",
"science",
from.date = "2016-01-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
View(guardian_results)
guardian_results$score
guardian_results$trailText
guardian_results$body
guardian_results$body[1]
guardian_results$words
guardian_results$wordcount
guardian_df <- guardian_results %>% mutate(id, sectionId, webTitle,
trailText, headline, wordcount, body)
guardian_df <- as.tibble(guardian_results) %>% mutate(id, sectionId, webTitle,
trailText, headline, wordcount, body)
p_load(janeaustenr, dplyr, stringr, GuardianR, tidyverse)
guardian_df <- as.tibble(guardian_results) %>% mutate(id, sectionId, webTitle,
trailText, headline, wordcount, body)
guardian_df
guardian_df <- as.tibble(guardian_results) %>% mutate(id, sectionId, webTitle,
trailText, headline, wordcount, body)
guardian_df
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId, webTitle,
trailText, headline, wordcount, body)
guardian_df
44
class(33)
select(id, sectionId, webTitle, trailText, headline, wordcount, body)
guardian_df <- as.tibble(guardian_results) %>% mutate(wordcount = as.numeric(wordcount)) %>%
select(id, sectionId, webTitle, trailText, headline, wordcount, body)
guardian_df
guardian_df <- as.tibble(guardian_results) %>% mutate(wordcount = as.dbl(wordcount)) %>%
select(id, sectionId, webTitle, trailText, headline, wordcount, body)
guardian_df <- as.tibble(guardian_results) %>% mutate(wordcount = as.dbl(wordcount)) %>%
select(id, sectionId, webTitle, trailText, headline, wordcount, body)
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
mutate(wordcount = as.numeric(wordcount))
guardian_df
View(guardian_df)
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
as.numric(wordcount)
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
as.numeric(wordcount)
View(guardian_results)
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body)
View(guardian_df)
as.numeric(guardian_df$wordcount)
as.double(guardian_df$wordcount)
guardian_df$wordcount
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
mutate(as.numeric(as.character(wordcount)))
guardian_df
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
mutate(wordcount = as.numeric(as.character(wordcount)))
guardian_df
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
mutate(line = as.numeric(),
wordcount = as.numeric(as.character(wordcount)))
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
mutate(line = row_number(),
wordcount = as.numeric(as.character(wordcount)))
guardian_df
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText, headline, wordcount, body) %>%
mutate(id_n = row_number(),
wordcount = as.numeric(as.character(wordcount)))
gettext(guardian_df$body)
tidy_guardian <- guardian_pf %>% unnest_tokens(word, body)
tidy_guardian <- guardian_df %>% unnest_tokens(word, body)
p_load(janeaustenr, dplyr, stringr, GuardianR, tidyverse, tidytext)
tidy_guardian <- guardian_df %>% unnest_tokens(word, body)
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText,
headline, wordcount, body) %>%
mutate(id_n = row_number(),
wordcount = as.numeric(as.character(wordcount)),
body = as.character(body),
webtitle = as.character(webTitle),
headline = as.character(headline))
tidy_guardian <- guardian_df %>% unnest_tokens(word, body)
tidy_guardian
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText,
headline, wordcount, body) %>%
mutate(id_n = row_number(),
wordcount = as.numeric(as.character(wordcount)),
body = as.character(body),
trailtext = as.character(trailText),
webtitle = as.character(webTitle),
headline = as.character(headline))
tidy_guardian <- guardian_df %>% unnest_tokens(word, body)
tidy_guardian
View(tidy_guardian)
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText,
headline, wordcount, body) %>%
mutate(id_n = row_number(),
wordcount = as.numeric(as.character(wordcount)),
body = as.character(body),
trailText = as.character(trailText),
webTitle = as.character(webTitle),
headline = as.character(headline))
tidy_guardian
View(tidy_guardian)
guardian_df <- as.tibble(guardian_results) %>% select(id, sectionId,
webTitle, trailText,
headline, wordcount, body) %>%
mutate(id_n = row_number(),
wordcount = as.numeric(as.character(wordcount)),
body = as.character(body),
trailText = as.character(trailText),
webTitle = as.character(webTitle),
headline = as.character(headline))
tidy_guardian <- guardian_df %>% unnest_tokens(word, body)
tidy_guardian
clean_guardian <- tidy_guardian %>% anti_join(get_stopwords())
clean_guardian
View(clean_guardian)
guardian_results <- get_guardian("AI",
format = "XML",
"science",
from.date = "2016-01-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
guardian_results
guardian_results <- get_guardian("AI",                                                                "science",
from.date = "2016-01-01",
to.date = "2016-12-31",
api.key = "ff3fd2f1-2cd5-4e4e-87d0-5432f0e281cc")
get_sentiments("afinn")
afinn_sent <- get_sentiments("afinn")
clean_guardian %>% inner_join(afinn_sent) %>% count(word)
clean_guardian %>% inner_join(get_sentiments("afinn")) %>%
summarise(sentiment = sum(score)) %>% mutate(method = "AFINN")
clean_guardian %>% inner_join(get_sentiments("afinn")) %>%
group_by(index = id_n) %>%
summarise(sentiment = sum(score)) %>% mutate(method = "AFINN")
clean_guardian %>% inner_join(get_sentiments("afinn")) %>%
group_by(word) %>%
summarise(sentiment = sum(score)) %>% mutate(method = "AFINN")
library(SentimentAnalysis)
??SentimentAnalysis
sentiment <- analyzeSentiment(imdb$Corpus)
analyzeSentiment(clean_guardian)
analyzeSentiment(clean_guardian$word)
analyzeSentiment(guardian_df$body)
guardian_SA <- analyzeSentiment(guardian_df$body)
install.packages("stringr")
library(stringr)
install.packages("quanteda")
install.packages("devtools")
library(devtools)
install_github(matthewjdenny/SpeedReader)
install_github("matthewjdenny/SpeedReader")
install.packages("openNLP")
guardian_SA
install.packages("quanteda.corpora")
updateR(
)
update()
updateR()
install.packages("updateR")
if(!require(installr)) { install.packages("installr"); require(installr)}
library(installr)
updateR()
View(tidy_guardian)
library(installr)
version
rm(list = ls())
library(pacman)
p_load(tidyverse, foreign, psych, lsr, lme4, brms, sjPlot,
stringr, htmlwidgets, ggplot2, lsmeans, HDInterval)
rm(list = ls())
ioed <- read.csv("results_ioed_test_zadkiel.csv")    #("pilotexp2.csv")
ioed <- as_tibble(ioed) %>%
select(submission_id, q1, answer1, q2, answer2, q3, answer3, q4,
answer4, q5, answer5, q6, answer6, q7, answer7, q8, answer8, q9, answer9, q10,
answer10, q11, answer11, q12, answer12, item_HD, explanation_high, post_high,
RT1, item_LD, explanation_low, post_low, RT2, timeSpent, age, gender,
education, comments, languages)
setwd("C:/Users/user/Dropbox/Master classes/2nd semester/BDACM/final_project/IOED")
ioed <- read.csv("results_ioed_test_zadkiel.csv")    #("pilotexp2.csv")
ioed <- as_tibble(ioed) %>%
select(submission_id, q1, answer1, q2, answer2, q3, answer3, q4,
answer4, q5, answer5, q6, answer6, q7, answer7, q8, answer8, q9, answer9, q10,
answer10, q11, answer11, q12, answer12, item_HD, explanation_high, post_high,
RT1, item_LD, explanation_low, post_low, RT2, timeSpent, age, gender,
education, comments, languages)
ioed <- ioed %>%
filter(submission_id != 71) %>%
filter(submission_id != 72) %>%
filter(submission_id != 73) %>%
filter(submission_id != 74) %>%
filter(submission_id != 75) %>%
filter(submission_id != 76) %>%
filter(submission_id != 96) %>%
filter(submission_id != 106)
ioed <- ioed %>% select( -(age:languages))
pre_rateHD1 <- NA
pre_rateLD1 <- NA
pre_rateHD2 <- NA
pre_rateLD2 <- NA
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] == "How Healthcare system in your country works") {
pre_rateHD1[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_HD1 = "How Healthcare system in your country works")
}
}
}
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] =="How a zipper works") {
pre_rateHD2[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_HD2 = "How a zipper works")
}
}
}
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] == "How an incinerator works") {
pre_rateLD1[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_LD1 = "How an incinerator works")
}
}
}
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] == "How piano keys make sounds") {
pre_rateLD2[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_LD2 = "How piano keys make sounds")
}
}
}
ioed <- ioed %>%
mutate(pre_rateHD1 = as.numeric(as.character(unlist(pre_rateHD1))),
pre_rateLD1 = as.numeric(as.character(unlist(pre_rateLD1))),
pre_rateHD2 = as.numeric(as.character(unlist(pre_rateHD2))),
pre_rateLD2 = as.numeric(as.character(unlist(pre_rateLD2)))
)
ioed <- ioed %>%
dplyr::select(submission_id, item_HD1, pre_rateHD1, item_LD1,
pre_rateLD1, item_HD2, pre_rateHD2, item_LD2,
pre_rateLD2, item_HD:timeSpent, -explanation_high,
-explanation_low)
ioed <- ioed %>%
# ioed1 <- ioed %>%
dplyr::mutate(itempre_HD = NA,
pre_high = NA,
itempre_LD = NA,
pre_low = NA)
for (i in 1:nrow(ioed)) {
for (j in c(2,6)) {
if (ioed[i,j] == ioed[i,10]) {
ioed[i,j] = NA
ioed[i,j+1] = NA
}
}
}
for (i in 1:nrow(ioed)) {
for (j in c(4,8)) {
if (ioed[i,j] != ioed[i,13]) {
ioed[i,j] = NA
ioed[i,j+1] = NA
}
}
}
for (i in 1:nrow(ioed)) {
for (j in c(2,6)) {
if (!is.na(ioed[i,j])) {
ioed[i,17] = ioed[i,j]
ioed[i,18] = ioed[i,j+1]
}
}
}
for (i in 1:nrow(ioed)) {
for (j in c(4,8)) {
if (!is.na(ioed[i,j])) {
ioed[i,19] = ioed[i,j]
ioed[i,20] = ioed[i,j+1]
}
}
}
ioed <- ioed %>%
dplyr::select(submission_id, itempre_HD:pre_low,
-(item_HD1:pre_rateLD2), item_HD:pre_low)
ioed <- ioed %>%
mutate(ioed_high = pre_high-post_high,
ioed_low = pre_low-post_low)
ioed <- ioed1
ioed <- ioed %>%
tidyr::gather(ioed_high, ioed_low,
key='desirability', value = 'magnitude') %>%
mutate(desirability = as.factor(desirability)) %>%
gather(RT1, RT2, key = 'order', value = 'rt')
ioed2 <- ioed %>% slice(1:(nrow(ioed)/4),
(((nrow(ioed)/4)*3)+1):(nrow(ioed)))
View(ioed2)
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 | submission_id))
summary(model2)
View(ioed2)
ioed2
rm(list = ls())
ioed <- read.csv("results_ioed_test_zadkiel.csv")    #("pilotexp2.csv")
ioed <- as_tibble(ioed) %>%
select(submission_id, q1, answer1, q2, answer2, q3, answer3, q4,
answer4, q5, answer5, q6, answer6, q7, answer7, q8, answer8, q9, answer9, q10,
answer10, q11, answer11, q12, answer12, item_HD, explanation_high, post_high,
RT1, item_LD, explanation_low, post_low, RT2, timeSpent, age, gender,
education, comments, languages)
ioed <- ioed %>%
filter(submission_id != 71) %>%
filter(submission_id != 72) %>%
filter(submission_id != 73) %>%
filter(submission_id != 74) %>%
filter(submission_id != 75) %>%
filter(submission_id != 76) %>%
filter(submission_id != 96) %>%
filter(submission_id != 106)
ioed <- ioed %>% select( -(age:languages))
pre_rateHD1 <- NA
pre_rateLD1 <- NA
pre_rateHD2 <- NA
pre_rateLD2 <- NA
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] == "How Healthcare system in your country works") {
pre_rateHD1[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_HD1 = "How Healthcare system in your country works")
}
}
}
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] =="How a zipper works") {
pre_rateHD2[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_HD2 = "How a zipper works")
}
}
}
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] == "How an incinerator works") {
pre_rateLD1[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_LD1 = "How an incinerator works")
}
}
}
for (i in 1:nrow(ioed)) {
for (j in seq(2, 24, by = 2)) {
if (ioed[i,j] == "How piano keys make sounds") {
pre_rateLD2[i] = ioed[i,j+1]
ioed<- ioed %>% mutate(item_LD2 = "How piano keys make sounds")
}
}
}
ioed <- ioed %>%
mutate(pre_rateHD1 = as.numeric(as.character(unlist(pre_rateHD1))),
pre_rateLD1 = as.numeric(as.character(unlist(pre_rateLD1))),
pre_rateHD2 = as.numeric(as.character(unlist(pre_rateHD2))),
pre_rateLD2 = as.numeric(as.character(unlist(pre_rateLD2)))
)
ioed <- ioed %>%
dplyr::select(submission_id, item_HD1, pre_rateHD1, item_LD1,
pre_rateLD1, item_HD2, pre_rateHD2, item_LD2,
pre_rateLD2, item_HD:timeSpent, -explanation_high,
-explanation_low)
ioed <- ioed %>%
# ioed1 <- ioed %>%
dplyr::mutate(submission_id = as.factor(submission_id),
itempre_HD = NA,
pre_high = NA,
itempre_LD = NA,
pre_low = NA)
for (i in 1:nrow(ioed)) {
for (j in c(2,6)) {
if (ioed[i,j] == ioed[i,10]) {
ioed[i,j] = NA
ioed[i,j+1] = NA
}
}
}
for (i in 1:nrow(ioed)) {
for (j in c(4,8)) {
if (ioed[i,j] != ioed[i,13]) {
ioed[i,j] = NA
ioed[i,j+1] = NA
}
}
}
for (i in 1:nrow(ioed)) {
for (j in c(2,6)) {
if (!is.na(ioed[i,j])) {
ioed[i,17] = ioed[i,j]
ioed[i,18] = ioed[i,j+1]
}
}
}
for (i in 1:nrow(ioed)) {
for (j in c(4,8)) {
if (!is.na(ioed[i,j])) {
ioed[i,19] = ioed[i,j]
ioed[i,20] = ioed[i,j+1]
}
}
}
ioed <- ioed %>%
dplyr::select(submission_id, itempre_HD:pre_low,
-(item_HD1:pre_rateLD2), item_HD:pre_low)
ioed <- ioed %>%
mutate(ioed_high = pre_high-post_high,
ioed_low = pre_low-post_low)
ioed <- ioed1
ioed <- ioed %>%
tidyr::gather(ioed_high, ioed_low,
key='desirability', value = 'magnitude') %>%
mutate(desirability = as.factor(desirability)) %>%
gather(RT1, RT2, key = 'order', value = 'rt')
ioed2 <- ioed %>% slice(1:(nrow(ioed)/4),
(((nrow(ioed)/4)*3)+1):(nrow(ioed)))
model1 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability)
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 | submission_id))
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 + submission_id))
summary(model2)
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 + desirability))
summary(model2)
summary(model1)
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 + desirability|submission_id))
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 + rt|submission_id))
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 + submission_id | desirability))
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 + submission_id | rt))
model2 <- glm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability +
(1 + submission_id))
model_bay <- brm(data=ioed2,
formula=magnitude~rt + desirability + rt*desirability)
summary(model_bay)
